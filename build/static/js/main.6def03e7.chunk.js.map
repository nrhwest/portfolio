{"version":3,"sources":["images/nathan1.jpg","components/landing_page.js","components/about_me.js","components/resume.js","components/contact.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","src","require","alt","href","rel","target","aria-hidden","Component","About","Resume","Contact","Projects","Main","Switch","Route","exact","path","component","App","title","scroll","Link","to","main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6def03e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nathan1.857308ad.jpg\";","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass LandingPage extends Component {\n    render() {\n        return (\n            // <div><h1>Sup muhfucka</h1></div>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Grid className=\"landing-grid\">\n                    <Cell col={12}>\n                        <img \n                            src={require('../images/nathan1.jpg')}\n                            alt=\"hi\"\n                            className=\"nathan-img\" />\n\n                        <div className=\"banner-text\"><h1>Software Developer</h1>\n                        <hr/>\n                        <p>Java | Python | C | Perl | Machine Learning | Natural Language Processing</p>\n\n                        \n                        <div className=\"social-links\">\n                            {/* LinkedIn Profile */}\n                            <a href=\"https://linkedin.com/in/nrhwest\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                            </a>\n                            {/* Twitter Profile */}\n                            <a href=\"https://twitter.com/natewst\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-twitter-square\" aria-hidden=\"true\" />\n                            </a>\n                            {/* Github Profile */}\n                            <a href=\"http://github.com/nrhwest\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                            </a>\n                        </div>\n                        </div> \n\n                    </Cell>\n                </Grid>\n            \n            </div>\n        );\n    }\n}\n\nexport default LandingPage;","import React, {Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return(\n            <div><h1>About Page</h1></div>\n        );\n    }\n}\n\nexport default About;","import React, {Component } from 'react';\n\nclass Resume extends Component {\n    render() {\n        return(\n            <div><h1>Resume Page </h1></div>\n        );\n    }\n}\n\nexport default Resume;","import React, {Component } from 'react';\n\nclass Contact extends Component {\n    render() {\n        return(\n            <div><h1>Contact Page</h1></div>\n        );\n    }\n}\n\nexport default Contact;","import React, {Component } from 'react';\n\nclass Projects extends Component {\n    render() {\n        return(\n            <div><h1>Projects Page</h1></div>\n        );\n    }\n}\n\nexport default Projects;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport LandingPage from './landing_page';\nimport About from './about_me';\nimport Resume from './resume';\nimport Contact from './contact'\nimport Projects from './projects'\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={LandingPage} />\n    <Route path=\"/about_me\" component={About} />\n    <Route path=\"/contact\" component={Contact} />\n    <Route path=\"/resume\" component={Resume} />\n    <Route path=\"/projects\" component={Projects} />\n\n  </Switch>\n)\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main'\nimport { Link } from 'react-router-dom';\n\n\n/*\n  Tutorial used to help create site : https://www.youtube.com/watch?v=n8iA18R76jk&t=395s\n*/\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header className=\"header-color\" title=\"Nathan West Portfolio\" scroll>\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/about_me\">About Me</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Header>\n          <Drawer title=\"Title\">\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/about_me\">About Me</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}